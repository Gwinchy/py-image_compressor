function compressAndDownloadMultiple(files) {
    console.log('Received files:', files);
    const container = document.getElementById('container');
    const downloadCounter = document.getElementById('downloadCounter');

    files.forEach(file => {
        
    });((file, index) => {
        const img = new Image();
        img.src = URL.createObjectURL(file);

        img.onload = () => {
            const canvas = document.createElement('canvas');
            const ctx = canvas.getContext('2d');

            let width = img.width;
            let height = img.height;

            const maxWidth = width;
            const maxHeight = height;

            if (width > maxWidth) {
                height *= maxWidth / width;
                width = maxWidth;
            }

            if (height > maxHeight) {
                width *= maxHeight / height;
                height = maxHeight;
            }

            canvas.width = width;
            canvas.height = height;

            ctx.drawImage(img, 0, 0, width, height);

            canvas.toBlob((blob) => {
                const compressedImage = new File([blob], `${file.name}_compressed.jpg`, { type: 'image/jpeg' });

                const downloadLink = document.createElement('a');
                downloadLink.href = URL.createObjectURL(compressedImage);
                downloadLink.download = `${file.name}_compressed.jpg`;
                downloadLink.textContent = `Download Compressed Image ${index + 1}`;

                downloadLink.addEventListener('click', () => {
                    alert('Here is your compressed image.');
                    // Clear the input element
                    const inputElement = document.getElementById('imageInput');
                    inputElement.value = '';

                    // Increment the downloaded image counter
                    const currentCount = parseInt(downloadCounter.textContent) || 0;
                    downloadCounter.textContent = (currentCount + 1).toString();

                    // Update the button text to indicate that an image has been downloaded
                    downloadLink.textContent = 'Image Downloaded';
                    downloadLink.disabled = true;
                });

                container.appendChild(downloadLink);
            }, 'image/jpeg', 0.5);
        };
    });
}
